# -*- coding: utf-8 -*-
"""Resuelto -Tareas Básicas en Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0HvWnrT_pfn_c31KR1FPJjTxT4t1dVi

# Programando tareas básicas en Python y Herramientas Web

Python es un lenguaje poderoso y fácil de aprender. Posee estructuras de datos de alto nivel y una enfoque simple de orientación a objetos.

Python permite dividir los programas en módulos que pueden ser reutilizados por otros programas. Adicionalmente, viene con una gran colección de módulos propios para realizar tareas de entrada y salida, llamadas al sistema, sockets, interfaces gráficas, etc.

Python es un lenguaje interpretado. Esto quiere decir que para ejecutar un programa en este lenguaje se requiere la instalación de un intérprete. El intérprete puede ser usado interactivamente, lo cual hace fácil experimentar con características del lenguaje.

## Python como Lenguaje

Automatizar tareas es posible gracias a los lenguajes de programación. En ese sentido, entenderemos en este curso que programar es decirle al computador que haga lo que uno necesita que haga. Para comunicarnos con la máquina necesitaremos entender a python como un lenguaje.

## Enfoque del curso

El enfoque del curso es práctico donde se espera obtener una perspectiva de aprender mientras se programa. Del mismo modo que se puede aprender a jugar fútbol con sus reglas principales, se puede aprender a programar escribiendo muchos programas durante el curso.

Python utiliza ambientes de tipo REPL (Read-Eval-Print-Loop) en el cual es posible experimentar e ir avanzando en la medida en que se desarrollan los programas. Una mayor información sobre REPL puede encontrarse en el siguiente enlace: https://www.jungledisk.com/blog/2018/06/01/read-eval-print-loop-what-are-repls-and-how-to-use-them/

## Algoritmos y resolución de Problemas

Un algoritmo es una finita secuencia de pasos que resuelve un problema. A parte del dominio que se espera de un lenguaje, se pretende que el estudiante desarrolle una perspectiva algorítmica para solucionar problemas utilizando el computador.

## Herramientas web para desarrollar

En este curso se presentarán dos opciones para utilizar una versión igual o superior a python 3.5: 

- Una versión en línea que provee google: https://colab.research.google.com/
- Una página web que permite desarrollar código en diferentes lenguajes de Programación: https://repl.it/

## Colaboratory (Colab)

Es una herramienta web de Google que permite ejecutar código en python:

- Sin realizar configuración adicional
- Con acceso gratis a GPU
- Es fácil de compartir

Los códigos en colab se conocen como notebooks.

Para cargar este notebook se debe:

1. Ingresar a https://colab.research.google.com/notebooks/intro.ipynb#recent=true

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/opennotebook.png "Open Notebook")

2. Seleccionar github e ingresar los datos como se muestra a continuación:

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/opennotebook2.png "Open Notebook")

Y listo!

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/opennotebook3.png "Open Notebook")

En colab existen dos tipos de celda Texto y Código. Esta es una celda de texto.
"""

# esta es una celda de código
x = "amigos"
print("hola " + x)

"""Para ejecutar una celda se puede presionar el boton de play ó con el teclado escribir ```Command/Ctrl+Enter```

En los campos de texto se puede usar algo de html:

<table>
    <tr>
    <td>Nombre Estudiante</td><td>Nota</td>
    </tr>
    <tr>
    <td>Mike Myers</td><td>4.5</td>
    </tr>
    <tr>
    <td>Otm Shank</td><td>2.3</td>
    </tr>
</table>

ó incluso código en Latex:

$\sum_{i=1}^{n}{i^2}$

El valor de una variable definida en una celda de código se puede usar en las celdas siguientes:
"""

print("Eso es todo " + x)

"""## Mi primer programa en Python: Componiendo reagueton

Este código muestra un pequeño ejemplo de aplicación para generar letras de reaguetón utilizando python.
"""

from IPython.display import YouTubeVideo

YouTubeVideo("6iOlB0QLy84")

"""Aquí vemos que el algoritmo para generar una frase de reaguetón es explicado cuando don Melquiades muestra la tabla a continuación:

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/letra.png "Open Notebook")

En python el algoritmo que melquiades usa que consiste en:

1. definir las categorías
2. seleccionar una palabra de cada categoría al azar
3. unir las palabras seleccionadas y mostrarlas al usuario

Se ve así:
"""

import random #se importa la librería de python random

sujetos = ["mami", "bebé", "princess", "mami"]  #se define una lista
intenciones = ["yo quiero", "yo puedo", "yo vengo a", "voy a"]
verbos = ["encendelte", "amalte", "ligal", "jugal"]
advs = ["suave", "lento", "lápido", "fuelte"]
complementos_uno = ["hasta que salga el sol", "toda la noche", "hasta el amanecer", "todo el día"]
complementos_dos = ["sin anestesia", "sin compromiso", "feis to feis", "sin miedo"]

sujeto_seleccionado = random.choice(sujetos) #se utiliza la librería para seleccionar un elemento al azar de la lista sujetos
intencion_seleccionada = random.choice(intenciones)
verbo_seleccionado = random.choice(verbos)
adv_seleccionado = random.choice(advs)
compl1s_seleccionado = random.choice(complementos_uno)
compl2s_seleccionado = random.choice(complementos_dos)

print("letra generada: " + sujeto_seleccionado + " " + intencion_seleccionada + " " + verbo_seleccionado + " " 
      + adv_seleccionado + " " + compl1s_seleccionado + " " + compl2s_seleccionado) #se imprime la canción

"""## Repl.it

Es una página web que permite ejecutar programas en varios lenguajes incluido python. 

1. Se ingresa a http://repl.it y se selecciona start coding

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/repl-1.png "Open Notebook")

2. Se selecciona el lenguaje de programación (en este caso python)

![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/repl-2.png "Open Notebook")

3. Se puede copiar y pegar el código anterior en el editor, se selecciona la opción run en la parte superior y se observa como se ejecuta en la consola de la parte derecha:

    ![](https://raw.githubusercontent.com/arleserp/MinTIC2022/master/images/repl-3.png "Open Notebook")

# Ejercicio


Con base en el anterior programa elabore un programa que genere un discurso político al azar en la siguiente celda de colab y ejecutarlo en repl:

![](https://raw.githubusercontent.com/arleserp/cursopython/master/images/discurso.jpg "Discurso")

<table>
<tr>
    <td><b>LAMBETAZO</b></td>
    <td><b>POTENCIALES MARRANOS</b></td>
    <td><b>CONDICIÓN</b></td>
    <td><b>COMPROMISO</b></td>
    <td><b>ILUSIÓN GUERRERISTA</b></td>
    <td><b>PROMESA</b></td>
    <td><b>BENEFICIO POPULISTA</b></td>
    <td><b>DEPENDIENDO DE LA CANTIDAD DE VOTOS</b></td>
</tr>
<tr>
    <td>QUERIDOS</td>
    <td>COMPATRIOTAS</td>
    <td>EN MI GOBIERNO</td>
    <td>VOY A DERROTAR</td>
    <td>LA VIOLENCIA Y</td>
    <td>TRABAJARÉ POR</td>
    <td>LA EDUCACIÓN</td>
    <td>DEL PAÍS</td>
</tr>
<tr>
    <td>APRECIADOS</td>
    <td>CONCIUDADANOS</td>
    <td>CON SU APOYO</td>
    <td>VENCERÉ</td>
    <td>LA DELINCUENCIA Y</td>
    <td>GARANTIZARÉ</td>
    <td>EL EMPLEO</td>
    <td>DE LA CIUDAD</td>
</tr>
<tr>
    <td>DISTINGUIDOS</td>
    <td>AMIGOS</td>
    <td>SIENDO ELEGIDO</td>
    <td>ELIMINARÉ</td>
    <td>LA CORRUPCIÓN Y</td>
    <td>PROTEGERÉ</td>
    <td>LA SEGURIDAD</td>
    <td>DE LA COMUNIDAD</td>
</tr>
<tr>
    <td>HONORABLES</td>
    <td>COTERRANEOS</td>
    <td>CON SU AYUDA</td>
    <td>ACABARÉ</td>
    <td>LA INFLACIÓN Y</td>
    <td>VELARÉ POR</td>
    <td>LA LAZ</td>
    <td>DE LA POBLACIÓN</td>
</tr>
<tr>
    <td>ESTIMADOS</td>
    <td>COPARTIDARIOS</td>
    <td>SI ME SIGUEN</td>
    <td>LUCHARÉ CONTRA</td>
    <td>LA POBREZA Y</td>
    <td>PROMOVERÉ</td>
    <td>LA IGUALDAD</td>
    <td>PARA TODA LA GENTE</td>
</tr>
<tr>
    <td>RESPETADOS</td>
    <td>ELECTORES</td>
    <td>DURANTE MI MANDATO</td>
    <td>COMBATIRÉ</td>
    <td>EL DESPLAZAMIENTO Y</td>
    <td>DEFENDERÉ</td>
    <td>LA SALUD</td>
    <td>DE CADA COLOMBIANO</td>
</tr>    
</table>
"""

#Aquí puede programar la solución
import random #librería de python random
lambetazo = ["Queridos","Apreciados","Distinguidos","Honorables","Estimados","Respetados"]
potenciales_marranos = ["compatriotas","conciudadanos","amigos","coterraneos","copartidarios","electores"] 
condicion = ["en mi gobierno","con su apoyo","siendo elegido","con su ayuda","si me siguen","durante mi mandato"]
compromiso = ["voy a derrotar","venceré","elminaré","acabaré","lucharé contra","combatiré"]
ilusion_guerrerista = ["la violencia y","la delincuencia y","la corrupción y","la inflación y","la pobreza y","el desplazamiento y"]
promesa = ["trabajaré por","garantizaré","protegeré","velaré por","promoveré","defenderé"]
beneficio_populista = ["la educación","el empleo","la seguridad","la paz","la igualdad","la salud"]
votos = ["del país","de la ciudad","de la comunidad","de la población","para toda la gente","de cada Colombiano"]

lambetazo_selecc = random.choice(lambetazo)
marranos_selecc = random.choice(potenciales_marranos)
condicion_selecc = random.choice(condicion)
compromiso_selecc = random.choice(compromiso)
ilusion_selecc = random.choice(ilusion_guerrerista)
promesa_selecc = random.choice(promesa)
beneficio_selecc = random.choice(beneficio_populista)
votos_selecc = random.choice(votos)

print("Discurso generado: " + lambetazo_selecc + " " + marranos_selecc + " " +
       condicion_selecc + " " + compromiso_selecc + " " + ilusion_selecc + " " + promesa_selecc + " " + 
       beneficio_selecc + " " + votos_selecc)

"""## Referencias


Armendáriz, D (2019). Introducción a Jupyter Notebook. Visitado el 2 de Junio de 2020. https://www.youtube.com/watch?v=orr063XGPPE

Barry, P. (2016). Head First Python: A Brain-Friendly Guide. " O'Reilly Media, Inc.".

Guttag, John. Introduction to Computation and Programming Using Python: With Application to Understanding Data Second Edition. MIT Press, 2016. ISBN: 9780262529624.

Tutorial oficial de python 3, disponible en: https://docs.python.org/3/tutorial/interpreter.html

Rodríguez, A (2020). Curso de Programación en Python. https://github.com/arleserp/cursopython
"""